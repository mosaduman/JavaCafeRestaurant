/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cafe_Restaurant;

import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author duman
 */
public class Odeme extends javax.swing.JFrame {

                Connection con = null;
                Statement st = null;
                ResultSet rs = null;
    public Odeme(String _masaadi) {
        initComponents();
        jLabel2.setText(_masaadi);
        masasiparisleri(_masaadi);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton37 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Odeme1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jButton37.setBackground(new java.awt.Color(255, 255, 102));
        jButton37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton37.setText("Nakit");
        jButton37.setMargin(new java.awt.Insets(6, 20, 6, 20));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        Odeme1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Odeme1.setText("Hesabı Kapat");
        Odeme1.setMargin(new java.awt.Insets(6, 20, 6, 20));
        Odeme1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Odeme1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Toplam:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(Odeme1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(Odeme1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButton4.setForeground(new java.awt.Color(255, 0, 0));
        jButton4.setText("Masa Değiştir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(245, 245, 245)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(568, 540));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 public void masasiparisleri(String masaad)
  {
       //veri tabanından masa siparislerini çekmek için 
     if(masaad.equals("Masa 1"))  
     {
                 int toplam=0;
try {          
                Class.forName("com.mysql.jdbc.Driver");

               
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa1");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                    toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
                
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
    
         jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa1 sonu
     else if(masaad.equals("Masa 2"))
     {
          int toplam=0;
         try {          
                Class.forName("com.mysql.jdbc.Driver");

               

                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa2");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                    toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
 
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
         jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa2 sonu
      else if(masaad.equals("Masa 3"))
     {
        
         int toplam=0;
         try {          
                Class.forName("com.mysql.jdbc.Driver");

               

                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa3");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                    toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
 
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
          jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa3 sonu
      else if(masaad.equals("Masa 4"))
     {
         int toplam=0;
         try {          
                Class.forName("com.mysql.jdbc.Driver");

               

                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa4");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                     toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
 
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
          jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa4 sonu
      else if(masaad.equals("Masa 5"))
     {
         int toplam=0;
         try {          
                Class.forName("com.mysql.jdbc.Driver");

               

                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa5");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                     toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
 
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
          jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa5 sonu
       else if(masaad.equals("Masa 6"))
     {
         int toplam=0;
         try {          
                Class.forName("com.mysql.jdbc.Driver");

               

                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa6");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                     toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
 
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
          jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa6 sonu
      else if(masaad.equals("Masa 7"))
     {
         int toplam=0;
         try {          
                Class.forName("com.mysql.jdbc.Driver");

               

                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa7");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                     toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
 
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
          jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa7 sonu
      else if(masaad.equals("Masa 8"))
     {
         int toplam=0;
         try {          
                Class.forName("com.mysql.jdbc.Driver");

               

                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
                st = (Statement) con.createStatement();
                
                rs = st.executeQuery("select * from masa8");
                
                
                DefaultListModel model1=new DefaultListModel();
                while(rs.next()){
                     toplam+=(Integer.parseInt(rs.getString("adet")))*(Integer.parseInt(rs.getString("tutar")));
                  model1.addElement(rs.getString("id")+"    "+rs.getString("adet")+" Adet "+rs.getString("siparis")+"  "+rs.getString("tutar"));
                }
                jList1.setModel(model1);
 
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
          jLabel1.setText(String.valueOf(toplam+" TL"));
     }//masa8 sonu
  }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         Masalar01 frame=new Masalar01();
         frame.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Odeme1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Odeme1ActionPerformed
     
              if(jLabel2.getText().equals("Masa 1"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa1";
             st.executeUpdate(sql);
               masasiparisleri("Masa 1");
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
        else if(jLabel2.getText().equals("Masa 2"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
 
                Connection con = null;
                Statement st = null;
             
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa2";
             st.executeUpdate(sql);
               masasiparisleri("Masa 2");
        
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
        else if(jLabel2.getText().equals("Masa 3"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
 
                Connection con = null;
                Statement st = null;
             
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa3";
             st.executeUpdate(sql);
               masasiparisleri("Masa 3");
           
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
        else if(jLabel2.getText().equals("Masa 4"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
 
                Connection con = null;
                Statement st = null;
             
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa4";
             st.executeUpdate(sql);
               masasiparisleri("Masa 4");
          
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
        else if(jLabel2.getText().equals("Masa 5"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
 
                Connection con = null;
                Statement st = null;
             
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa5";
             st.executeUpdate(sql);
               masasiparisleri("Masa 5");
         
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
        else if(jLabel2.getText().equals("Masa 6"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
 
                Connection con = null;
                Statement st = null;
             
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa6";
             st.executeUpdate(sql);
               masasiparisleri("Masa 6");
          
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
        else if(jLabel2.getText().equals("Masa 7"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
 
                Connection con = null;
                Statement st = null;
             
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa7";
             st.executeUpdate(sql);
               masasiparisleri("Masa 7");
       
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
        else if(jLabel2.getText().equals("Masa 8"))
        {
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
 
                Connection con = null;
                Statement st = null;
             
                con = DriverManager.getConnection("jdbc:mysql://localhost/cafe-restaurant?useUnicode=true&amp;characterEncoding=utf8", "root", "");
              st = (Statement) con.createStatement();
                String sql =" Delete from masa8";
             st.executeUpdate(sql);
               masasiparisleri("Masa 8");
         
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        } 
        }
     
         
      
    }//GEN-LAST:event_Odeme1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Odeme1;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
